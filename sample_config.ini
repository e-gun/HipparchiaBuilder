[db]
DBUSER = hippa_wr
DBHOST = 127.0.0.1
DBPORT = 5432
DBNAME = hipparchiaDB
DBPASS = >>yourpasshere<<

#
# change the next two only in case of emergency
#

# only change to 'simple' if the build fails and you are told to modify this variable
CONNECTIONTYPE = 'if_not_simple_then_it_is_pooled'

[io]
# a sample build time difference between 4 and 6 workers is 37 vs 35min on 4 core/8 thread machine
# the load goes to about 9: too many workers can mean you sit around waiting for cycles
#
# a similar but different issue: load is fine; drive is too slow.
# 10 threads can build in 94m; 11 threads can build in 92m: IO-bound on an NVMe drive at that point.
#
# 11 workers and 16GB of RAM gets touch-and-go during the word counts: serious swapping; near 8G will get used at one point
# if you run out of swap, the wordcounts will be off (and you will not necessarily know that they are off)
#
# sample times [6 workers on a 4.7GHz virtual machine assigned 6 cores and 12G RAM running ubuntu 19.04]
#   [a] build all corpora           40.8 minutes
#   [b] build dictionaries          0.37 minutes
#   [c] build grammar tables        2.78 minutes
#   [d] build wordcounts            36.8 minutes

# autoconfigworkercount will set the workers to: ( cpu_count/ 2 ) + 1
# if this is not 'y', then the value for 'workers' will be used

autoconfigworkercount = y
workers = 3

# directories where we will find all of the files we need

builderdir = ../HipparchiaBuilder/
serverdir = ../HipparchiaServer/

datadir = ../HipparchiaData/
outputdir = ../HipparchiaData/intermediate_output/
outputfile = ../HipparchiaData/intermediate_output/dbready_wkg.txt

# places where the CD-ROMs might mount
# but you will have trouble building everything at once unless some of these are virtual disks

# phi = /Volumes/PHI0005
# tlg = /Volumes/TLG_E
# ddp = /Volumes/PHI7
# ins = /Volumes/PHI7
# chr = /Volumes/PHI7

# places where you can store the CD-ROM data for a big all-in-one-go build

phi= ../HipparchiaData/latin/
tlg = ../HipparchiaData/greek/
ddp = ../HipparchiaData/phi7/
ins = ../HipparchiaData/phi7/
chr = ../HipparchiaData/phi7/

sfx = .TXT
idt = .IDT
debugoutfile = _debug.txt

[lexica]

lexicadir = ../HipparchiaData/lexica/
greeklexicon = logeion.lsj.xml
latinlexicon = latin-lexicon_1999.04.0059.xml
gklemm = greek-lemmata.txt
gkanal = greek-analyses.txt
ltlemm = latin-lemmata.txt
ltanal = latin-analyses.txt
repairbadperseusrefs = y
repairtranslationtags = y
rewritemoprhdefinitions = y
grammarsqldir = ../HipparchiaLexicalData/prebuiltmorphology/


[wordcounts]
wordcountdir = ../HipparchiaLexicalData/wordcounts/

[corporatobuild]
buildlatinauthors = y
buildgreekauthors = y
buildinscriptions = y
buildpapyri = y
buildchristians = y
buildlex = y
buildgram = y
buildwordcounts = y
# will not 'load' from SQL if you do not ask for 'build' as well
loadwordcountsviasql = y
loadprebuiltgrammarifpresent = y

[buildoptions]
#
# consider building only with the defaults unless/until you know why you are changing something
#
# warnings: warnings will tell you about missing characters/codes
# timestamp: timestamp will put a timestamp on the build itself
# lunate: 'lunate = n' will enable final sigma + medial sigma: icky, but I will do my best not to judge you
# simplifybrackets: '❨❩❴❵⟦⟧⟪⟫《》‹›⦅⦆₍₎' will turn into '()[]⟨⟩'
# simplifyquotes: '“”‘’«»‹›“„' will turn into '“”‘’'
# smartsinglequotes: **try** to get quotes and initial elisions right: παντὶ ’κείνων and Ἆρ’ οὖν ὑμῖν ἱκανῶϲ and ‘some quoted text’
# hideknownblemishes: zap things like stray $ (which a debugger will need to have available in order to spot failures of the formatting parser)
# htmlifydatabase: write HTML spans, etc. in the database rather than ask the server to generate them on the fly
# rationalizetags: will try to find and re-balance bad tags in the original data; experimental; only works if 'htmlifydatabase' is 'n'
# buildlongestfirst: compile the longest items first; this is faster (but slightly more confusing) than compiling in numerical order
# unsearchable: a list of tags whose contents will be removed from the search column: removes things like '<speaker>Th.</speaker>'
#               ' κρ ' will no longer find every line spoken by Creon in Antigone if you make 'speaker' unsearchable
#               it is risky to add items to 'unsearchable' without reading/modifying the source for tag rules
#               'None' or a blank line disables this feature

warnings = n
timestamp = y
lunate = y
simplifybrackets = y
simplifyquotes = y
smartsinglequotes = y
hideknownblemishes = y
htmlifydatabase = y
rationalizetags = n
buildlongestfirst = y

# unsearchable = speaker hmutitle
unsearchable = None

[misc]
# Livy and Justinian need corrections to turn U into V
capu = y
# but you can be ruthless about this: Ubi --> Vbi, etc
strictcapu = n

[playground]
# do not activate this unless you have *very* specific needs
# transliterate: take all Greek in the "stripped" column and Romanize it phonetically
transliterate = n